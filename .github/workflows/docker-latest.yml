name: Docker latest image

on:
  workflow_call:
    inputs:
      GLOBAL_REPO_NAME:
        required: true
        type: string
      PATH_TO_DOCKERFILE:
        required: true
        type: string
      GLOBAL_IMAGE_NAME:
        required: true
        type: string
      GLOBAL_IMAGE_NAME_2:
        required: false
        type: string
    secrets:
      VAULT_ADDR:
        required: true
      CI_SECRET_READER_PERIODIC_TOKEN:
        required: true
      VAULTCA:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:

  check-commit-message:
    runs-on: ubuntu-latest
    steps:
      - name: Check commit message
        id: check
        if: "contains(github.event.head_commit.message, '[ci] Set') && contains(github.event.head_commit.message, '-SNAPSHOT')"
        run: |
          echo "Skipping workflow for version update commit"
          exit 78  # neutral exit code

  build-context:
    runs-on: ubuntu-latest
    steps:
      - uses: danubetech/github-action-log-build-context@v0.1.0

  publish-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Import Secrets
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          token: ${{ secrets.CI_SECRET_READER_PERIODIC_TOKEN }}
          caCertificate: ${{ secrets.VAULTCA }}
          secrets: |
            ci/data/gh-workflows/${{ inputs.GLOBAL_REPO_NAME }} username | DOCKER_USERNAME ;
            ci/data/gh-workflows/${{ inputs.GLOBAL_REPO_NAME }} password | DOCKER_PASSWORD ;
            ci/data/gh-workflows/maven-danubetech-nexus username | DANUBETECH_MAVEN_INTERNAL_USERNAME ;
            ci/data/gh-workflows/maven-danubetech-nexus password | DANUBETECH_MAVEN_INTERNAL_PASSWORD

      - name: Run build image action
        run: |
          docker build . -f "${{ inputs.PATH_TO_DOCKERFILE }}" -t "${{ inputs.GLOBAL_REPO_NAME }}/${{ inputs.GLOBAL_IMAGE_NAME }}" \
          --secret id=DANUBETECH_MAVEN_INTERNAL_USERNAME \
          --secret id=DANUBETECH_MAVEN_INTERNAL_PASSWORD

      - name: Login user to repo
        run: echo "${{ env.DOCKER_PASSWORD }}" | docker login "${{ inputs.GLOBAL_REPO_NAME }}" -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      - name: Push image
        run: docker push "${{ inputs.GLOBAL_REPO_NAME }}/${{ inputs.GLOBAL_IMAGE_NAME }}"

      - name: (Maybe) push image with more names
        run: if [ -z ${{ inputs.GLOBAL_IMAGE_NAME_2 }} ]; then \
          docker tag "${{ inputs.GLOBAL_REPO_NAME }}/${{ inputs.GLOBAL_IMAGE_NAME }}" "${{ inputs.GLOBAL_REPO_NAME }}/${{ inputs.GLOBAL_IMAGE_NAME_2 }}" && \
          docker push "${{ inputs.GLOBAL_REPO_NAME }}/${{ inputs.GLOBAL_IMAGE_NAME_2 }}"

      - name: Slack notification
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
