name: Maven Snapshot

on:
  workflow_call:
    inputs:
      JAVA_VERSION:
        required: false
        type: string
        default: '21'
        description: 'Java version to use for build'
      MAVEN_REPO_SERVER_ID:
        required: true
        type: string
        description: 'Server ID in Maven settings.xml'
    secrets:
      VAULT_ADDR:
        required: true
      CI_SECRET_READER_PERIODIC_TOKEN:
        required: true
      VAULTCA:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Fetch Vault Secrets
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          token: ${{ secrets.CI_SECRET_READER_PERIODIC_TOKEN }}
          caCertificate: ${{ secrets.VAULTCA }}
          secrets: |
            ci/data/gh-workflows/maven-danubetech-nexus username | MAVEN_USERNAME ;
            ci/data/gh-workflows/maven-danubetech-nexus password | MAVEN_PASSWORD

      - name: Configure Maven Settings
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << 'EOF'
          <settings>
            <servers>
          EOF

          # Parse comma-separated server IDs and create an entry for each
          echo "${{ inputs.MAVEN_REPO_SERVER_ID }}" | tr ',' '\n' | while read -r server_id; do
            # Skip empty lines
            [ -z "$server_id" ] && continue

            # Trim whitespace
            server_id=$(echo "$server_id" | xargs)

            cat >> ~/.m2/settings.xml << EOF
              <server>
                <id>$server_id</id>
                <username>${{ env.MAVEN_USERNAME }}</username>
                <password>${{ env.MAVEN_PASSWORD }}</password>
              </server>
          EOF
          done

          # Close the XML structure
          cat >> ~/.m2/settings.xml << 'EOF'
            </servers>
          </settings>
          EOF

      - name: Debug Maven Settings
        run: |
          echo "Maven settings.xml content (with masked credentials):"
          sed -n '
            s/<username>.*<\/username>/<username>****<\/username>/g
            s/<password>.*<\/password>/<password>****<\/password>/g
            p
          ' ~/.m2/settings.xml

      - name: Build and Deploy with Maven
        run: mvn --batch-mode -U -e deploy

      - name: Slack notification
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}