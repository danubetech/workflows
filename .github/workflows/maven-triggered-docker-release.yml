name: Docker release image

on:
  workflow_call:
    inputs:
      GLOBAL_REPO_NAME:
        required: true
        type: string
      PATH_TO_DOCKERFILE:
        required: true
        type: string
      GLOBAL_IMAGE_NAME:
        required: true
        type: string
      GLOBAL_FRAMEWORK:
        required: true
        type: string
    secrets:
      VAULT_ADDR:
        required: true
      CI_SECRET_READER_PERIODIC_TOKEN:
        required: true
      VAULTCA:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

jobs:

  build-context:
    runs-on: ubuntu-latest
    steps:
      - uses: danubetech/github-action-log-build-context@v0.1.0

  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read_and_set_version.outputs.version }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0 # Fetches the whole repo including tags

      - name: Read and set version
        id: read_and_set_version
        run: echo version=$(git describe --abbrev=0) >> $GITHUB_OUTPUT

  validate-pom:
    needs: set-version
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ needs.set-version.outputs.version }}
    steps:
      - name: Import Secrets
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          token: ${{ secrets.CI_SECRET_READER_PERIODIC_TOKEN }}
          caCertificate: ${{ secrets.VAULTCA }}
          secrets: |
            ci/data/gh-workflows/deployment-status slack-webhook-url | SLACK_WEBHOOK_URL

      - uses: actions/checkout@master
        with:
          ref: ${{ env.RELEASE_VERSION }}

      - name: Validate pom.xml
        run: mvn validate -P ci

      - name: Slack notification
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  publish-image:
    needs: [ validate-pom, set-version ]
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ needs.set-version.outputs.version }}
    steps:
      - name: Import Secrets
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          token: ${{ secrets.CI_SECRET_READER_PERIODIC_TOKEN }}
          caCertificate: ${{ secrets.VAULTCA }}
          secrets: |
            ci/data/gh-workflows/${{ inputs.GLOBAL_REPO_NAME }} username | DOCKER_USERNAME ;
            ci/data/gh-workflows/${{ inputs.GLOBAL_REPO_NAME }} password | DOCKER_PASSWORD

      - uses: actions/checkout@master
        with:
          ref: ${{ env.RELEASE_VERSION }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          version: latest

      - name: Set SHORT_SHA env variable
        id: short_sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.GLOBAL_REPO_NAME }}/${{ inputs.GLOBAL_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.RELEASE_VERSION }}-${{ steps.short_sha.outputs.SHORT_SHA }}

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.GLOBAL_REPO_NAME }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Docker Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.PATH_TO_DOCKERFILE }}
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha,scope=mvn-trig-docker-release
          cache-to: type=gha,scope=mvn-trig-docker-release,mode=max
          platforms: linux/amd64

      - name: Slack notification
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
